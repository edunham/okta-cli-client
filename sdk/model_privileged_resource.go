/*
Okta Admin Management

Allows customers to easily access the Okta Management APIs

API version: 5.1.0
Contact: devex-public@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// PrivilegedResource struct for PrivilegedResource
type PrivilegedResource struct {
	// Timestamp when the object was created
	Created *time.Time `json:"created,omitempty"`
	// Timestamp when the credential was last changed
	CredentialLastChanged *time.Time `json:"credentialLastChanged,omitempty"`
	// Current credential sync status of the privileged resource
	CredentialLastSyncState *string `json:"credentialLastSyncState,omitempty"`
	// ID of the privileged resource
	Id *string `json:"id,omitempty"`
	// Timestamp when the object was last updated
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	// Specific profile properties for the privileged account
	Profile map[string]map[string]interface{} `json:"profile,omitempty"`
	// The type of the resource
	ResourceType *string `json:"resourceType,omitempty"`
	// Current status of the privileged resource
	Status *string `json:"status,omitempty"`
	// Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the current status of an application using the [JSON Hypertext Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06) specification. This object is used for dynamic discovery of related resources and lifecycle operations.
	Links                map[string]interface{} `json:"_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PrivilegedResource PrivilegedResource

// NewPrivilegedResource instantiates a new PrivilegedResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivilegedResource() *PrivilegedResource {
	this := PrivilegedResource{}
	return &this
}

// NewPrivilegedResourceWithDefaults instantiates a new PrivilegedResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivilegedResourceWithDefaults() *PrivilegedResource {
	this := PrivilegedResource{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *PrivilegedResource) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegedResource) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *PrivilegedResource) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *PrivilegedResource) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCredentialLastChanged returns the CredentialLastChanged field value if set, zero value otherwise.
func (o *PrivilegedResource) GetCredentialLastChanged() time.Time {
	if o == nil || o.CredentialLastChanged == nil {
		var ret time.Time
		return ret
	}
	return *o.CredentialLastChanged
}

// GetCredentialLastChangedOk returns a tuple with the CredentialLastChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegedResource) GetCredentialLastChangedOk() (*time.Time, bool) {
	if o == nil || o.CredentialLastChanged == nil {
		return nil, false
	}
	return o.CredentialLastChanged, true
}

// HasCredentialLastChanged returns a boolean if a field has been set.
func (o *PrivilegedResource) HasCredentialLastChanged() bool {
	if o != nil && o.CredentialLastChanged != nil {
		return true
	}

	return false
}

// SetCredentialLastChanged gets a reference to the given time.Time and assigns it to the CredentialLastChanged field.
func (o *PrivilegedResource) SetCredentialLastChanged(v time.Time) {
	o.CredentialLastChanged = &v
}

// GetCredentialLastSyncState returns the CredentialLastSyncState field value if set, zero value otherwise.
func (o *PrivilegedResource) GetCredentialLastSyncState() string {
	if o == nil || o.CredentialLastSyncState == nil {
		var ret string
		return ret
	}
	return *o.CredentialLastSyncState
}

// GetCredentialLastSyncStateOk returns a tuple with the CredentialLastSyncState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegedResource) GetCredentialLastSyncStateOk() (*string, bool) {
	if o == nil || o.CredentialLastSyncState == nil {
		return nil, false
	}
	return o.CredentialLastSyncState, true
}

// HasCredentialLastSyncState returns a boolean if a field has been set.
func (o *PrivilegedResource) HasCredentialLastSyncState() bool {
	if o != nil && o.CredentialLastSyncState != nil {
		return true
	}

	return false
}

// SetCredentialLastSyncState gets a reference to the given string and assigns it to the CredentialLastSyncState field.
func (o *PrivilegedResource) SetCredentialLastSyncState(v string) {
	o.CredentialLastSyncState = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PrivilegedResource) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegedResource) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PrivilegedResource) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PrivilegedResource) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *PrivilegedResource) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegedResource) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *PrivilegedResource) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *PrivilegedResource) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *PrivilegedResource) GetProfile() map[string]map[string]interface{} {
	if o == nil || o.Profile == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegedResource) GetProfileOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.Profile == nil {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *PrivilegedResource) HasProfile() bool {
	if o != nil && o.Profile != nil {
		return true
	}

	return false
}

// SetProfile gets a reference to the given map[string]map[string]interface{} and assigns it to the Profile field.
func (o *PrivilegedResource) SetProfile(v map[string]map[string]interface{}) {
	o.Profile = v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *PrivilegedResource) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegedResource) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *PrivilegedResource) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *PrivilegedResource) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PrivilegedResource) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegedResource) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PrivilegedResource) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PrivilegedResource) SetStatus(v string) {
	o.Status = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PrivilegedResource) GetLinks() map[string]interface{} {
	if o == nil || o.Links == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegedResource) GetLinksOk() (map[string]interface{}, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PrivilegedResource) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]interface{} and assigns it to the Links field.
func (o *PrivilegedResource) SetLinks(v map[string]interface{}) {
	o.Links = v
}

func (o PrivilegedResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.CredentialLastChanged != nil {
		toSerialize["credentialLastChanged"] = o.CredentialLastChanged
	}
	if o.CredentialLastSyncState != nil {
		toSerialize["credentialLastSyncState"] = o.CredentialLastSyncState
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.Profile != nil {
		toSerialize["profile"] = o.Profile
	}
	if o.ResourceType != nil {
		toSerialize["resourceType"] = o.ResourceType
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PrivilegedResource) UnmarshalJSON(bytes []byte) (err error) {
	varPrivilegedResource := _PrivilegedResource{}

	err = json.Unmarshal(bytes, &varPrivilegedResource)
	if err == nil {
		*o = PrivilegedResource(varPrivilegedResource)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &additionalProperties)
	if err == nil {
		delete(additionalProperties, "created")
		delete(additionalProperties, "credentialLastChanged")
		delete(additionalProperties, "credentialLastSyncState")
		delete(additionalProperties, "id")
		delete(additionalProperties, "lastUpdated")
		delete(additionalProperties, "profile")
		delete(additionalProperties, "resourceType")
		delete(additionalProperties, "status")
		delete(additionalProperties, "_links")
		o.AdditionalProperties = additionalProperties
	} else {
		return err
	}

	return err
}

type NullablePrivilegedResource struct {
	value *PrivilegedResource
	isSet bool
}

func (v NullablePrivilegedResource) Get() *PrivilegedResource {
	return v.value
}

func (v *NullablePrivilegedResource) Set(val *PrivilegedResource) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivilegedResource) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivilegedResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivilegedResource(val *PrivilegedResource) *NullablePrivilegedResource {
	return &NullablePrivilegedResource{value: val, isSet: true}
}

func (v NullablePrivilegedResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivilegedResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
